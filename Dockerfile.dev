FROM python:3.9-alpine3.19 AS builder

ARG PROJECT_NAME=${PROJECT_NAME}
ARG VERSION=${VERSION:-0.0.1}

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    python3-dev \
    libffi-dev \
    make \
    g++

# Copy dependency files
COPY pyproject.toml poetry.lock ./

# Install Poetry and dependencies in a single layer to optimize caching
RUN pip install --no-cache-dir poetry==1.8.3 \
    && poetry config virtualenvs.create false \
    && poetry install --no-interaction --no-ansi --only main

# Copy application code after dependencies to leverage caching
COPY . .

# Runtime stage
FROM python:3.9-alpine3.19

# Set environment variables and working directory
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app

WORKDIR /app

# Copy dependencies and source code from builder
COPY --from=builder /usr/local/lib/python3.9/site-packages/ /usr/local/lib/python3.9/site-packages/
COPY --from=builder /app/src /app/src
COPY --from=builder /app/pyproject.toml /app/poetry.lock ./

# Create a non-root user and set ownership in a single step
RUN adduser -D -u 1001 appuser && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser
